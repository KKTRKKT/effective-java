package me.kktrkkt.effectivejava._2_builder;

/*
정적 팩토리와 생성자에 선택적 매개변수가 많을 경우 고려할 수 있는 방안
    1. 생성자 체이닝
        - 모든 매개변수를 가진 생성자를 만들고, 필수적인 매개변수만 넣고 나머지는 기본값을 주는 식으로 호출하는 방식
        단점: 매개변수가 많아지면 사용하기가 어려워진다
    2. 자바빈즈 패턴
        - setter를 통해 매개변수를 설정하는 방식
        단점: 완전한 객체를 만들때 메소드 호출이 많아지고, 불변객체를 만들수 없다
    3. 빌더 패턴 (권장)
        - 플루언트 API 또는 메서드 체이닝을 통해 변수를 설정하는 방식
        특징: 생성자 체이닝보다 코드 사용이 편하고, 자바빈즈 패턴보다 안전하다.
        단점: 코드가 복잡해진다.
    4. 계층형 빌더 패턴
        - 빌더 패턴을 상속할때 사용하는 방식 자세한 내용은 me.kktrkkt.effectivejava._2_builder._4_hierarchical_builder.Pizza 참고

* 플루언트 API는 메소드 체이닝에 기반한 설계한 인터페이스
* 메소드 체이닝은 this를 반환해 메소드를 이어서 호출하는 방법
 */