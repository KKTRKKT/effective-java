package me.kktrkkt.effectivejava._1_static_factory_method;

/*
정적팩토리메소드란 static 키워드를 통해 객체를 생성하는 방법을 의미한다.

장점:
1. 생성자에 이름을 부여해 시그니처가 중복되지 않게 해준다.
2. 인스턴스 생성을 제한해 메모리를 절약할 수 있다. (플라이웨이트 패턴)
3. 상위 타입은 하위 타입으로 반환 할 수 있다.
4. 입력 매개변수에 따라 매번 다른 클래스 객체를 반환할 수 있다.
5. 정적 팩터리 메서드를 작성하는 시점에는 반환할 객체의 클래스가 존재하지 않아도 된다.

단점:
1. 상속이 불가능해진다.
    -> 프로퍼티로 사용한다.
2. javadoc에서 생성자가 어떤 메소드인지 알수가 없다
    -> 1. 정적 팩토리 메소드일 경우 메소드 이름 규칙을 적용한다
        - 입력 파라미터를 받아 생성하는 경우 of, valueOf 로 명명
        - 존재하는 인스턴스를 반환하는 경우 getInstance, instance 로 명명
        - 호출할때마다 인스턴스를 생성하는 경우 newInstance, create 로 명명
        - 팩토리 클래스의 경우에는 get반환타입클래스명으로 명명
       2. docs를 작성한다.

열거 타입
장점:
    1. 인스턴스가 하나만 만들어진다.
    2. 타입 세이프티하다
특징:
    - values()로 모든 값을 순회할 수 있다.
    - 생성자, 메소드, 필드를 가질 수 있다.
    - == 연산자로 동일성을 비교가능하다
    - EnumMap과 EnumSet을 사용할 수 있다.

EnumMap 특징
    - 열거형 크기만큼 배열이 생겨나며, ordinal에 따라 index가 정해진다.
    - 배열을 사용하기 때문에 연산속도가 빠르다.
    - 열거형 순서에 따라 데이터가 정렬된다.
    - 키의 순서대로 순회할 때 효율적이다.
EnumSet 특징
    - 비트 벡터를 통해 공간과 성능을 최적화한다.
    - 다양한 집합 연산(교집합, 차집합, 합집합 등)을 제공한다.

* 시그니처는 이름, 매개변수 타입, 순서, 개수를 의미
* 플라이웨이트 패턴은 많이 생성되는 객체를 미리 만들어 메모리를 절약하는 패턴이다
* 비트 벡터란 비트 배열로 구성된 자료구조, 0이면 집합에 미포함, 1이면 집합에 포함을 의미한다
 */